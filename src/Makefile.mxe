CC=i686-w64-mingw32.static-gcc
LD=$(CC)
WINDRES=i686-w64-mingw32.static-windres
PKGCONFIG=i686-w64-mingw32.static-pkg-config
STRIP=i686-w64-mingw32.static-strip
include version.inc

VERSION_STR=\"$(VERSION)\"

COMPAT_OBJS=sleep.o memmem.o strcasestr.o app.o hid.o
PLATFORM_CFLAGS=-DWINDOWS
EXTRA_LDFLAGS=-lsetupapi

CFLAGS=-Wall -g `$(PKGCONFIG) $(HIDAPI_NAME) zlib --cflags` --std=c99 $(PLATFORM_CFLAGS) -DVERSION_STR=$(VERSION_STR)
LDFLAGS=`$(PKGCONFIG) $(HIDAPI_NAME) zlib --libs` -g -lz
GTK_CFLAGS=`$(PKGCONFIG) --cflags gtk+-3.0 gmodule-2.0 gio-2.0`
GTK_LDFLAGS=`$(PKGCONFIG) --libs gtk+-3.0 gmodule-2.0 gio-2.0` -mwindows
GLIB_CRES=$(shell $(PKGCONFIG) --variable=glib_compile_resources gio-2.0)
RESOURCES=$(shell $(GLIB_CRES) --sourcedir=. --generate-dependencies resources.xml)

LDFLAGS+=$(EXTRA_LDFLAGS)

PREFIX=/usr/local

PROGS=$(patsubst %,%.exe,gcn64ctl mempak_ls mempak_format mempak_extract_note mempak_insert_note mempak_rm mempak_convert gcn64ctl_gui)
MEMPAKLIB_OBJS=mempak.o mempak_fs.o $(COMPAT_OBJS)
GUI_OBJS=gcn64ctl_gui.o gui_mpkedit.o gui_fwupd.o gui_logger.o gui_dfu_programmer.o gui_gc2n64_manager.o gui_update_progress_dialog.o gui_xferpak.o resources.o

.PHONY : clean

all: $(PROGS) gui.xml

gcn64ctl_gui.exe: $(GUI_OBJS) gcn64.o gcn64lib.o gc2n64_adapter.o delay.o hexdump.o ihex.o ihex_signature.o mempak_gcn64usb.o xferpak.o xferpak_tools.o gbcart.o uiio.o uiio_gtk.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) $(GTK_LDFLAGS) -o $@
	$(STRIP) $@

gcn64ctl.exe: main.o gcn64.o gcn64lib.o hexdump.o gc2n64_adapter.o ihex.o delay.o mempak_gcn64usb.o perftest.o biosensor.o xferpak.o xferpak_tools.o gbcart.o uiio.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@

app.o: app.rc icon.ico
	$(WINDRES) app.rc -o app.o

gui.xml: gcn64cfg.glade
	grep -v requires gcn64cfg.glade > gui.xml

resources.c: $(RESOURCES) gui.xml
	$(GLIB_CRES) $(RES_FILE) --target=$@ --sourcedir=. --generate-source resources.xml

resources.o: resources.c
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

gcn64ctl_gui.o: gcn64ctl_gui.c gcn64ctl_gui.h
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

gui_%.o: gui_%.c gui_%.h
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

uiio_gtk.o: uiio_gtk.c uiio_gtk.h
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

mempak_convert.exe: mempak_convert.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@

mempak_rm.exe: mempak_rm.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@

mempak_insert_note.exe: mempak_insert_note.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@

mempak_extract_note.exe: mempak_extract_note.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@

mempak_ls.exe: mempak_ls.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@

mempak_format.exe: mempak_format.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@
	$(STRIP) $@


%.o: %.c %.h
	$(CC) $(CFLAGS) -c $<

clean:
	rm -f *.o *.exe $(PROGS)

